{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","maxPage","Math","ceil","pages","handlePageSelect","page","className","classNames","disabled","href","onClick","map","active","items","App","query","search","useLocation","React","useMemo","URLSearchParams","useQuery","useState","Number","get","setCurrentPage","itemsPerPage","setItemsPerPage","itemsStart","itemsEnd","length","itemsOnPage","slice","id","onChange","event","value","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"qOAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAUC,KAAKC,KAAKN,EAAQC,GAC5BM,EAAQd,EAAW,EAAGW,GAEtBI,EAAmB,SAACC,GACpBA,IAASP,GAAeO,EAAO,GAAKA,GAAQL,GAC9CD,EAAaM,IAIjB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UACFC,IAAW,YAAa,CAAEC,SAA0B,IAAhBV,IADtC,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAAS,kBAAMN,EAAiBN,EAAc,IALhD,oBAWDK,EAAMQ,KAAI,SAAAN,GAAI,OACb,oBAAIC,UACFC,IAAW,YAAa,CAAEK,OAAQP,IAASP,IAD7C,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,kBAAMN,EAAiBC,IAJlC,SAMGA,SAKP,oBAAIC,UACFC,IAAW,YAAa,CAAEC,SAAUV,IAAgBE,IADtD,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAC/BU,QAAS,kBAAMN,EAAiBN,EAAc,IALhD,wBCxDFe,EAAQxB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAQb,IAAMqB,EAAgB,WAC3B,IAAMC,EAPR,WACE,IAAQC,EAAWC,cAAXD,OAER,OAAOE,IAAMC,SAAQ,kBAAM,IAAIC,gBAAgBJ,KAAS,CAACA,IAI3CK,GACd,EACIC,mBAASC,OAAOR,EAAMS,IAAI,UAAY,GAD1C,mBAAO1B,EAAP,KAAoB2B,EAApB,KAEA,EACIH,mBAASC,OAAOR,EAAMS,IAAI,aAAe,GAD7C,mBAAOE,EAAP,KAAqBC,EAArB,KAGMC,GAAc9B,EAAc,GAAK4B,EACnCG,EAAW/B,EAAc4B,EAEzBG,EAAWhB,EAAMiB,SACnBD,EAAWhB,EAAMiB,QAGnB,IAAMC,EAAclB,EAAMmB,MAAMJ,EAAYC,GAa5C,OACE,sBAAKvB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC8B,EAAa,EAD9C,cACqDC,EADrD,eACoEhB,EAAMiB,OAD1E,OAIA,sBAAKxB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR2B,GAAG,kBACH3B,UAAU,eACV4B,SArBuB,SAACC,GAChC,IAAQC,EAAUD,EAAME,OAAhBD,MAERT,EAAgBJ,OAAOa,IACvBX,EAAe,IAkBPW,MAAOV,EALT,UAOE,wBAAQU,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkBhC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOiB,EAAMiB,OACbjC,QAAS6B,EACT5B,YAAaA,EACbC,aA5CmB,SAACM,GACxBoB,EAAepB,MA8Cb,6BACG0B,EAAYpB,KAAI,SAAA4B,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC5EnBC,IAASC,OAAO,cAAC,IAAD,UAAQ,cAAC,EAAD,MAAkBC,SAASC,eAAe,W","file":"static/js/main.beee597d.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const maxPage = Math.ceil(total / perPage);\n  const pages = getNumbers(1, maxPage);\n\n  const handlePageSelect = (page: number) => {\n    if (page !== currentPage && page > 0 && page <= maxPage) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={\n        classNames('page-item', { disabled: currentPage === 1 })\n      }\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => handlePageSelect(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li className={\n          classNames('page-item', { active: page === currentPage })\n        }\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageSelect(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={\n        classNames('page-item', { disabled: currentPage === maxPage })\n      }\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === maxPage}\n          onClick={() => handlePageSelect(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nfunction useQuery() {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n\nexport const App: React.FC = () => {\n  const query = useQuery();\n  const [currentPage, setCurrentPage]\n    = useState(Number(query.get('page')) || 1);\n  const [itemsPerPage, setItemsPerPage]\n    = useState(Number(query.get('perPage')) || 5);\n\n  const itemsStart = (currentPage - 1) * itemsPerPage;\n  let itemsEnd = currentPage * itemsPerPage;\n\n  if (itemsEnd > items.length) {\n    itemsEnd = items.length;\n  }\n\n  const itemsOnPage = items.slice(itemsStart, itemsEnd);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleItemsPerPageChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setItemsPerPage(Number(value));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemsStart + 1} - ${itemsEnd} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleItemsPerPageChange}\n            value={itemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {itemsOnPage.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n"],"sourceRoot":""}